{
  "rules": {
    "adminUsers": {
      ".read": "auth !== null",
      ".write": false
    },
    "boards": {
      ".read": true,
      "$boardId": {
        "threads": {
          "$threadId": {
            ".write": "auth !== null && (!data.exists() || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists()))",
            ".validate": "newData.isBoolean()"
          }
        }
      },
      ".indexOn": ["active"]
    },
    "categories": {
      ".read": true,
      ".write": false,
      ".indexOn": ["active"]
    },
    "posts": {
      ".read": true,
      "$postId": {
        ".write": "auth !== null && ((!data.exists() && root.child('threads/' + newData.child('threadId').val() + '/locked').val() !== true) || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists()))",
        ".validate": "newData.hasChildren(['body', 'createdAt', 'threadId', 'user'])",
        "body": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "threadId": {
          ".validate": "newData.isString()"
        },
        "replyTo": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "user": {
          "displayName": {
            ".validate": "newData.isString()"
          },
          "id": {
            ".validate": "newData.val() === auth.uid"
          },
          "image": {
            ".validate": "newData.isString()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "threads": {
      ".read": true,
      "$threadId": {
        ".write": "auth !== null",
        ".validate": "newData.hasChildren(['boardId', 'createdAt', 'lastPostAt', 'posts', 'title', 'user'])",
        "boardId": {
          ".validate": "newData.isString() && !data.exists()"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "lastPostAt": {
          ".validate": "newData.isNumber()"
        },
        "locked": {
          ".validate": "newData.isBoolean()"
        },
        "posts": {
          "$postId": {
            ".validate": "newData.isBoolean() && !data.exists()"
          }
        },
        "title": {
          ".validate": "newData.isString() && !data.exists()"
        },
        "user": {
          "displayName": {
            ".validate": "newData.isString() && !data.exists()"
          },
          "id": {
            ".validate": "newData.val() === auth.uid && !data.exists()"
          },
          "image": {
            ".validate": "newData.isString() && !data.exists()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "users": {
      "$uid": {
        ".write": "auth !== null",
        ".read": true,
        "displayName": {
          ".write": "auth.uid === $uid"
        },
        "lastLoginAt": {
          ".write": "auth.uid === $uid"
        },
        "profileImageUrl": {
          ".write": "auth.uid === $uid"
        },
        "provider": {
          ".write": "auth.uid === $uid"
        },
        "registeredAt": {
          ".write": "auth.uid === $uid"
        },
        "posts": {
          "$postId": {
            ".write": "auth.uid === $uid || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists())",
            ".validate": "newData.isBoolean()"
          }
        },
        "threadsStarted": {
          "$threadId": {
            ".write": "auth.uid === $uid || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists())",
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    "settings": {
      ".read": true,
      ".write": false
    }
  }
}
